"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(globalThis["webpackChunk"] = globalThis["webpackChunk"] || []).push([["src_graphql_shopClient_ts"],{

/***/ "./src/graphql/generated-shop.ts":
/*!***************************************!*\
  !*** ./src/graphql/generated-shop.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ActiveCustomerAddressesDocument: () => (/* binding */ ActiveCustomerAddressesDocument),\n/* harmony export */   ActiveCustomerOrdersDocument: () => (/* binding */ ActiveCustomerOrdersDocument),\n/* harmony export */   ActiveOrderDocument: () => (/* binding */ ActiveOrderDocument),\n/* harmony export */   ActiveOrderFullDocument: () => (/* binding */ ActiveOrderFullDocument),\n/* harmony export */   AddItemToOrderDocument: () => (/* binding */ AddItemToOrderDocument),\n/* harmony export */   AddPaymentToOrderDocument: () => (/* binding */ AddPaymentToOrderDocument),\n/* harmony export */   AddressFragmentDoc: () => (/* binding */ AddressFragmentDoc),\n/* harmony export */   AdjustOrderLineDocument: () => (/* binding */ AdjustOrderLineDocument),\n/* harmony export */   AdjustmentType: () => (/* binding */ AdjustmentType),\n/* harmony export */   ApplyCouponCodeDocument: () => (/* binding */ ApplyCouponCodeDocument),\n/* harmony export */   AssetType: () => (/* binding */ AssetType),\n/* harmony export */   AuthorizeNetKeysDocument: () => (/* binding */ AuthorizeNetKeysDocument),\n/* harmony export */   AvailableCountriesDocument: () => (/* binding */ AvailableCountriesDocument),\n/* harmony export */   CollectionDocument: () => (/* binding */ CollectionDocument),\n/* harmony export */   CollectionsDocument: () => (/* binding */ CollectionsDocument),\n/* harmony export */   CreateCustomerAddressDocument: () => (/* binding */ CreateCustomerAddressDocument),\n/* harmony export */   CreateCustomerAddressMutationDocument: () => (/* binding */ CreateCustomerAddressMutationDocument),\n/* harmony export */   CreateGuestOrderCustomerUserDocument: () => (/* binding */ CreateGuestOrderCustomerUserDocument),\n/* harmony export */   CurrencyCode: () => (/* binding */ CurrencyCode),\n/* harmony export */   CurrentCustomerDocument: () => (/* binding */ CurrentCustomerDocument),\n/* harmony export */   DeleteCustomerAddressDocument: () => (/* binding */ DeleteCustomerAddressDocument),\n/* harmony export */   DeletionResult: () => (/* binding */ DeletionResult),\n/* harmony export */   DetailedProductFragmentDoc: () => (/* binding */ DetailedProductFragmentDoc),\n/* harmony export */   DiscountFragmentDoc: () => (/* binding */ DiscountFragmentDoc),\n/* harmony export */   EligiblePaymentMethodsDocument: () => (/* binding */ EligiblePaymentMethodsDocument),\n/* harmony export */   EligibleShippingMethodsDocument: () => (/* binding */ EligibleShippingMethodsDocument),\n/* harmony export */   ErrorCode: () => (/* binding */ ErrorCode),\n/* harmony export */   ErrorResultFragmentDoc: () => (/* binding */ ErrorResultFragmentDoc),\n/* harmony export */   GlobalFlag: () => (/* binding */ GlobalFlag),\n/* harmony export */   HistoryEntryType: () => (/* binding */ HistoryEntryType),\n/* harmony export */   IsValidEmailDocument: () => (/* binding */ IsValidEmailDocument),\n/* harmony export */   LanguageCode: () => (/* binding */ LanguageCode),\n/* harmony export */   ListedProductFragmentDoc: () => (/* binding */ ListedProductFragmentDoc),\n/* harmony export */   LogicalOperator: () => (/* binding */ LogicalOperator),\n/* harmony export */   LoginDocument: () => (/* binding */ LoginDocument),\n/* harmony export */   LogoutDocument: () => (/* binding */ LogoutDocument),\n/* harmony export */   OrderAddressFragmentDoc: () => (/* binding */ OrderAddressFragmentDoc),\n/* harmony export */   OrderByCodeDocument: () => (/* binding */ OrderByCodeDocument),\n/* harmony export */   OrderDetailFragmentDoc: () => (/* binding */ OrderDetailFragmentDoc),\n/* harmony export */   OrderLineFragmentDoc: () => (/* binding */ OrderLineFragmentDoc),\n/* harmony export */   OrderShippingRatesDocument: () => (/* binding */ OrderShippingRatesDocument),\n/* harmony export */   OrderTrackingInfoDocument: () => (/* binding */ OrderTrackingInfoDocument),\n/* harmony export */   OrderType: () => (/* binding */ OrderType),\n/* harmony export */   Permission: () => (/* binding */ Permission),\n/* harmony export */   ProductDocument: () => (/* binding */ ProductDocument),\n/* harmony export */   ProductFragmentDoc: () => (/* binding */ ProductFragmentDoc),\n/* harmony export */   ProductSummaryDocument: () => (/* binding */ ProductSummaryDocument),\n/* harmony export */   ProductVariantFragmentDoc: () => (/* binding */ ProductVariantFragmentDoc),\n/* harmony export */   RegisterCustomerAccountDocument: () => (/* binding */ RegisterCustomerAccountDocument),\n/* harmony export */   RemoveCouponCodeDocument: () => (/* binding */ RemoveCouponCodeDocument),\n/* harmony export */   RemoveOrderLineDocument: () => (/* binding */ RemoveOrderLineDocument),\n/* harmony export */   RequestPasswordResetDocument: () => (/* binding */ RequestPasswordResetDocument),\n/* harmony export */   RequestUpdateCustomerEmailAddressDocument: () => (/* binding */ RequestUpdateCustomerEmailAddressDocument),\n/* harmony export */   ResetPasswordDocument: () => (/* binding */ ResetPasswordDocument),\n/* harmony export */   SearchDocument: () => (/* binding */ SearchDocument),\n/* harmony export */   SetCustomerForOrderDocument: () => (/* binding */ SetCustomerForOrderDocument),\n/* harmony export */   SetOrderBillingAddressDocument: () => (/* binding */ SetOrderBillingAddressDocument),\n/* harmony export */   SetOrderCustomFieldDocument: () => (/* binding */ SetOrderCustomFieldDocument),\n/* harmony export */   SetOrderShippingAddressDocument: () => (/* binding */ SetOrderShippingAddressDocument),\n/* harmony export */   SetOrderShippingMethodDocument: () => (/* binding */ SetOrderShippingMethodDocument),\n/* harmony export */   SetTaxCloudAuthorizationDocument: () => (/* binding */ SetTaxCloudAuthorizationDocument),\n/* harmony export */   SortOrder: () => (/* binding */ SortOrder),\n/* harmony export */   TransitionOrderToStateDocument: () => (/* binding */ TransitionOrderToStateDocument),\n/* harmony export */   UpdateCustomerAddressMutationDocument: () => (/* binding */ UpdateCustomerAddressMutationDocument),\n/* harmony export */   UpdateCustomerDocument: () => (/* binding */ UpdateCustomerDocument),\n/* harmony export */   UpdateCustomerEmailAddressDocument: () => (/* binding */ UpdateCustomerEmailAddressDocument),\n/* harmony export */   UpdateCustomerPasswordMutationDocument: () => (/* binding */ UpdateCustomerPasswordMutationDocument),\n/* harmony export */   VerifyCustomerAccountDocument: () => (/* binding */ VerifyCustomerAccountDocument),\n/* harmony export */   getSdk: () => (/* binding */ getSdk)\n/* harmony export */ });\n/* harmony import */ var graphql_tag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql-tag */ \"../node_modules/graphql-tag/lib/index.js\");\n\nconst AdjustmentType = {\n  DistributedOrderPromotion: 'DISTRIBUTED_ORDER_PROMOTION',\n  Other: 'OTHER',\n  Promotion: 'PROMOTION'\n};\nconst AssetType = {\n  Binary: 'BINARY',\n  Image: 'IMAGE',\n  Video: 'VIDEO'\n};\n/**\n * @description\n * ISO 4217 currency code\n *\n * @docsCategory common\n */\nconst CurrencyCode = {\n  /** United Arab Emirates dirham */\n  Aed: 'AED',\n  /** Afghan afghani */\n  Afn: 'AFN',\n  /** Albanian lek */\n  All: 'ALL',\n  /** Armenian dram */\n  Amd: 'AMD',\n  /** Netherlands Antillean guilder */\n  Ang: 'ANG',\n  /** Angolan kwanza */\n  Aoa: 'AOA',\n  /** Argentine peso */\n  Ars: 'ARS',\n  /** Australian dollar */\n  Aud: 'AUD',\n  /** Aruban florin */\n  Awg: 'AWG',\n  /** Azerbaijani manat */\n  Azn: 'AZN',\n  /** Bosnia and Herzegovina convertible mark */\n  Bam: 'BAM',\n  /** Barbados dollar */\n  Bbd: 'BBD',\n  /** Bangladeshi taka */\n  Bdt: 'BDT',\n  /** Bulgarian lev */\n  Bgn: 'BGN',\n  /** Bahraini dinar */\n  Bhd: 'BHD',\n  /** Burundian franc */\n  Bif: 'BIF',\n  /** Bermudian dollar */\n  Bmd: 'BMD',\n  /** Brunei dollar */\n  Bnd: 'BND',\n  /** Boliviano */\n  Bob: 'BOB',\n  /** Brazilian real */\n  Brl: 'BRL',\n  /** Bahamian dollar */\n  Bsd: 'BSD',\n  /** Bhutanese ngultrum */\n  Btn: 'BTN',\n  /** Botswana pula */\n  Bwp: 'BWP',\n  /** Belarusian ruble */\n  Byn: 'BYN',\n  /** Belize dollar */\n  Bzd: 'BZD',\n  /** Canadian dollar */\n  Cad: 'CAD',\n  /** Congolese franc */\n  Cdf: 'CDF',\n  /** Swiss franc */\n  Chf: 'CHF',\n  /** Chilean peso */\n  Clp: 'CLP',\n  /** Renminbi (Chinese) yuan */\n  Cny: 'CNY',\n  /** Colombian peso */\n  Cop: 'COP',\n  /** Costa Rican colon */\n  Crc: 'CRC',\n  /** Cuban convertible peso */\n  Cuc: 'CUC',\n  /** Cuban peso */\n  Cup: 'CUP',\n  /** Cape Verde escudo */\n  Cve: 'CVE',\n  /** Czech koruna */\n  Czk: 'CZK',\n  /** Djiboutian franc */\n  Djf: 'DJF',\n  /** Danish krone */\n  Dkk: 'DKK',\n  /** Dominican peso */\n  Dop: 'DOP',\n  /** Algerian dinar */\n  Dzd: 'DZD',\n  /** Egyptian pound */\n  Egp: 'EGP',\n  /** Eritrean nakfa */\n  Ern: 'ERN',\n  /** Ethiopian birr */\n  Etb: 'ETB',\n  /** Euro */\n  Eur: 'EUR',\n  /** Fiji dollar */\n  Fjd: 'FJD',\n  /** Falkland Islands pound */\n  Fkp: 'FKP',\n  /** Pound sterling */\n  Gbp: 'GBP',\n  /** Georgian lari */\n  Gel: 'GEL',\n  /** Ghanaian cedi */\n  Ghs: 'GHS',\n  /** Gibraltar pound */\n  Gip: 'GIP',\n  /** Gambian dalasi */\n  Gmd: 'GMD',\n  /** Guinean franc */\n  Gnf: 'GNF',\n  /** Guatemalan quetzal */\n  Gtq: 'GTQ',\n  /** Guyanese dollar */\n  Gyd: 'GYD',\n  /** Hong Kong dollar */\n  Hkd: 'HKD',\n  /** Honduran lempira */\n  Hnl: 'HNL',\n  /** Croatian kuna */\n  Hrk: 'HRK',\n  /** Haitian gourde */\n  Htg: 'HTG',\n  /** Hungarian forint */\n  Huf: 'HUF',\n  /** Indonesian rupiah */\n  Idr: 'IDR',\n  /** Israeli new shekel */\n  Ils: 'ILS',\n  /** Indian rupee */\n  Inr: 'INR',\n  /** Iraqi dinar */\n  Iqd: 'IQD',\n  /** Iranian rial */\n  Irr: 'IRR',\n  /** Icelandic króna */\n  Isk: 'ISK',\n  /** Jamaican dollar */\n  Jmd: 'JMD',\n  /** Jordanian dinar */\n  Jod: 'JOD',\n  /** Japanese yen */\n  Jpy: 'JPY',\n  /** Kenyan shilling */\n  Kes: 'KES',\n  /** Kyrgyzstani som */\n  Kgs: 'KGS',\n  /** Cambodian riel */\n  Khr: 'KHR',\n  /** Comoro franc */\n  Kmf: 'KMF',\n  /** North Korean won */\n  Kpw: 'KPW',\n  /** South Korean won */\n  Krw: 'KRW',\n  /** Kuwaiti dinar */\n  Kwd: 'KWD',\n  /** Cayman Islands dollar */\n  Kyd: 'KYD',\n  /** Kazakhstani tenge */\n  Kzt: 'KZT',\n  /** Lao kip */\n  Lak: 'LAK',\n  /** Lebanese pound */\n  Lbp: 'LBP',\n  /** Sri Lankan rupee */\n  Lkr: 'LKR',\n  /** Liberian dollar */\n  Lrd: 'LRD',\n  /** Lesotho loti */\n  Lsl: 'LSL',\n  /** Libyan dinar */\n  Lyd: 'LYD',\n  /** Moroccan dirham */\n  Mad: 'MAD',\n  /** Moldovan leu */\n  Mdl: 'MDL',\n  /** Malagasy ariary */\n  Mga: 'MGA',\n  /** Macedonian denar */\n  Mkd: 'MKD',\n  /** Myanmar kyat */\n  Mmk: 'MMK',\n  /** Mongolian tögrög */\n  Mnt: 'MNT',\n  /** Macanese pataca */\n  Mop: 'MOP',\n  /** Mauritanian ouguiya */\n  Mru: 'MRU',\n  /** Mauritian rupee */\n  Mur: 'MUR',\n  /** Maldivian rufiyaa */\n  Mvr: 'MVR',\n  /** Malawian kwacha */\n  Mwk: 'MWK',\n  /** Mexican peso */\n  Mxn: 'MXN',\n  /** Malaysian ringgit */\n  Myr: 'MYR',\n  /** Mozambican metical */\n  Mzn: 'MZN',\n  /** Namibian dollar */\n  Nad: 'NAD',\n  /** Nigerian naira */\n  Ngn: 'NGN',\n  /** Nicaraguan córdoba */\n  Nio: 'NIO',\n  /** Norwegian krone */\n  Nok: 'NOK',\n  /** Nepalese rupee */\n  Npr: 'NPR',\n  /** New Zealand dollar */\n  Nzd: 'NZD',\n  /** Omani rial */\n  Omr: 'OMR',\n  /** Panamanian balboa */\n  Pab: 'PAB',\n  /** Peruvian sol */\n  Pen: 'PEN',\n  /** Papua New Guinean kina */\n  Pgk: 'PGK',\n  /** Philippine peso */\n  Php: 'PHP',\n  /** Pakistani rupee */\n  Pkr: 'PKR',\n  /** Polish złoty */\n  Pln: 'PLN',\n  /** Paraguayan guaraní */\n  Pyg: 'PYG',\n  /** Qatari riyal */\n  Qar: 'QAR',\n  /** Romanian leu */\n  Ron: 'RON',\n  /** Serbian dinar */\n  Rsd: 'RSD',\n  /** Russian ruble */\n  Rub: 'RUB',\n  /** Rwandan franc */\n  Rwf: 'RWF',\n  /** Saudi riyal */\n  Sar: 'SAR',\n  /** Solomon Islands dollar */\n  Sbd: 'SBD',\n  /** Seychelles rupee */\n  Scr: 'SCR',\n  /** Sudanese pound */\n  Sdg: 'SDG',\n  /** Swedish krona/kronor */\n  Sek: 'SEK',\n  /** Singapore dollar */\n  Sgd: 'SGD',\n  /** Saint Helena pound */\n  Shp: 'SHP',\n  /** Sierra Leonean leone */\n  Sll: 'SLL',\n  /** Somali shilling */\n  Sos: 'SOS',\n  /** Surinamese dollar */\n  Srd: 'SRD',\n  /** South Sudanese pound */\n  Ssp: 'SSP',\n  /** São Tomé and Príncipe dobra */\n  Stn: 'STN',\n  /** Salvadoran colón */\n  Svc: 'SVC',\n  /** Syrian pound */\n  Syp: 'SYP',\n  /** Swazi lilangeni */\n  Szl: 'SZL',\n  /** Thai baht */\n  Thb: 'THB',\n  /** Tajikistani somoni */\n  Tjs: 'TJS',\n  /** Turkmenistan manat */\n  Tmt: 'TMT',\n  /** Tunisian dinar */\n  Tnd: 'TND',\n  /** Tongan paʻanga */\n  Top: 'TOP',\n  /** Turkish lira */\n  Try: 'TRY',\n  /** Trinidad and Tobago dollar */\n  Ttd: 'TTD',\n  /** New Taiwan dollar */\n  Twd: 'TWD',\n  /** Tanzanian shilling */\n  Tzs: 'TZS',\n  /** Ukrainian hryvnia */\n  Uah: 'UAH',\n  /** Ugandan shilling */\n  Ugx: 'UGX',\n  /** United States dollar */\n  Usd: 'USD',\n  /** Uruguayan peso */\n  Uyu: 'UYU',\n  /** Uzbekistan som */\n  Uzs: 'UZS',\n  /** Venezuelan bolívar soberano */\n  Ves: 'VES',\n  /** Vietnamese đồng */\n  Vnd: 'VND',\n  /** Vanuatu vatu */\n  Vuv: 'VUV',\n  /** Samoan tala */\n  Wst: 'WST',\n  /** CFA franc BEAC */\n  Xaf: 'XAF',\n  /** East Caribbean dollar */\n  Xcd: 'XCD',\n  /** CFA franc BCEAO */\n  Xof: 'XOF',\n  /** CFP franc (franc Pacifique) */\n  Xpf: 'XPF',\n  /** Yemeni rial */\n  Yer: 'YER',\n  /** South African rand */\n  Zar: 'ZAR',\n  /** Zambian kwacha */\n  Zmw: 'ZMW',\n  /** Zimbabwean dollar */\n  Zwl: 'ZWL'\n};\nconst DeletionResult = {\n  /** The entity was successfully deleted */\n  Deleted: 'DELETED',\n  /** Deletion did not take place, reason given in message */\n  NotDeleted: 'NOT_DELETED'\n};\nconst ErrorCode = {\n  AlreadyLoggedInError: 'ALREADY_LOGGED_IN_ERROR',\n  CouponCodeExpiredError: 'COUPON_CODE_EXPIRED_ERROR',\n  CouponCodeInvalidError: 'COUPON_CODE_INVALID_ERROR',\n  CouponCodeLimitError: 'COUPON_CODE_LIMIT_ERROR',\n  EmailAddressConflictError: 'EMAIL_ADDRESS_CONFLICT_ERROR',\n  EmailBlacklistedError: 'EMAIL_BLACKLISTED_ERROR',\n  GuestCheckoutError: 'GUEST_CHECKOUT_ERROR',\n  IdentifierChangeTokenExpiredError: 'IDENTIFIER_CHANGE_TOKEN_EXPIRED_ERROR',\n  IdentifierChangeTokenInvalidError: 'IDENTIFIER_CHANGE_TOKEN_INVALID_ERROR',\n  IneligiblePaymentMethodError: 'INELIGIBLE_PAYMENT_METHOD_ERROR',\n  IneligibleShippingMethodError: 'INELIGIBLE_SHIPPING_METHOD_ERROR',\n  InsufficientStockError: 'INSUFFICIENT_STOCK_ERROR',\n  InvalidCredentialsError: 'INVALID_CREDENTIALS_ERROR',\n  InvalidDomainError: 'INVALID_DOMAIN_ERROR',\n  InvalidEmailError: 'INVALID_EMAIL_ERROR',\n  MissingPasswordError: 'MISSING_PASSWORD_ERROR',\n  NativeAuthStrategyError: 'NATIVE_AUTH_STRATEGY_ERROR',\n  NegativeQuantityError: 'NEGATIVE_QUANTITY_ERROR',\n  NotVerifiedError: 'NOT_VERIFIED_ERROR',\n  NoActiveOrderError: 'NO_ACTIVE_ORDER_ERROR',\n  OrderLimitError: 'ORDER_LIMIT_ERROR',\n  OrderModificationError: 'ORDER_MODIFICATION_ERROR',\n  OrderPaymentStateError: 'ORDER_PAYMENT_STATE_ERROR',\n  OrderStateTransitionError: 'ORDER_STATE_TRANSITION_ERROR',\n  PasswordAlreadySetError: 'PASSWORD_ALREADY_SET_ERROR',\n  PasswordResetTokenExpiredError: 'PASSWORD_RESET_TOKEN_EXPIRED_ERROR',\n  PasswordResetTokenInvalidError: 'PASSWORD_RESET_TOKEN_INVALID_ERROR',\n  PasswordValidationError: 'PASSWORD_VALIDATION_ERROR',\n  PaymentDeclinedError: 'PAYMENT_DECLINED_ERROR',\n  PaymentFailedError: 'PAYMENT_FAILED_ERROR',\n  UnknownError: 'UNKNOWN_ERROR',\n  VerificationTokenExpiredError: 'VERIFICATION_TOKEN_EXPIRED_ERROR',\n  VerificationTokenInvalidError: 'VERIFICATION_TOKEN_INVALID_ERROR'\n};\nconst GlobalFlag = {\n  False: 'FALSE',\n  Inherit: 'INHERIT',\n  True: 'TRUE'\n};\nconst HistoryEntryType = {\n  CustomerAddedToGroup: 'CUSTOMER_ADDED_TO_GROUP',\n  CustomerAddressCreated: 'CUSTOMER_ADDRESS_CREATED',\n  CustomerAddressDeleted: 'CUSTOMER_ADDRESS_DELETED',\n  CustomerAddressUpdated: 'CUSTOMER_ADDRESS_UPDATED',\n  CustomerDetailUpdated: 'CUSTOMER_DETAIL_UPDATED',\n  CustomerEmailUpdateRequested: 'CUSTOMER_EMAIL_UPDATE_REQUESTED',\n  CustomerEmailUpdateVerified: 'CUSTOMER_EMAIL_UPDATE_VERIFIED',\n  CustomerNote: 'CUSTOMER_NOTE',\n  CustomerPasswordResetRequested: 'CUSTOMER_PASSWORD_RESET_REQUESTED',\n  CustomerPasswordResetVerified: 'CUSTOMER_PASSWORD_RESET_VERIFIED',\n  CustomerPasswordUpdated: 'CUSTOMER_PASSWORD_UPDATED',\n  CustomerRegistered: 'CUSTOMER_REGISTERED',\n  CustomerRemovedFromGroup: 'CUSTOMER_REMOVED_FROM_GROUP',\n  CustomerVerified: 'CUSTOMER_VERIFIED',\n  OrderCancellation: 'ORDER_CANCELLATION',\n  OrderCouponApplied: 'ORDER_COUPON_APPLIED',\n  OrderCouponRemoved: 'ORDER_COUPON_REMOVED',\n  OrderFulfillment: 'ORDER_FULFILLMENT',\n  OrderFulfillmentTransition: 'ORDER_FULFILLMENT_TRANSITION',\n  OrderModified: 'ORDER_MODIFIED',\n  OrderNote: 'ORDER_NOTE',\n  OrderPaymentTransition: 'ORDER_PAYMENT_TRANSITION',\n  OrderRefundTransition: 'ORDER_REFUND_TRANSITION',\n  OrderStateTransition: 'ORDER_STATE_TRANSITION'\n};\n/**\n * @description\n * Languages in the form of a ISO 639-1 language code with optional\n * region or script modifier (e.g. de_AT). The selection available is based\n * on the [Unicode CLDR summary list](https://unicode-org.github.io/cldr-staging/charts/37/summary/root.html)\n * and includes the major spoken languages of the world and any widely-used variants.\n *\n * @docsCategory common\n */\nconst LanguageCode = {\n  /** Afrikaans */\n  Af: 'af',\n  /** Akan */\n  Ak: 'ak',\n  /** Amharic */\n  Am: 'am',\n  /** Arabic */\n  Ar: 'ar',\n  /** Assamese */\n  As: 'as',\n  /** Azerbaijani */\n  Az: 'az',\n  /** Belarusian */\n  Be: 'be',\n  /** Bulgarian */\n  Bg: 'bg',\n  /** Bambara */\n  Bm: 'bm',\n  /** Bangla */\n  Bn: 'bn',\n  /** Tibetan */\n  Bo: 'bo',\n  /** Breton */\n  Br: 'br',\n  /** Bosnian */\n  Bs: 'bs',\n  /** Catalan */\n  Ca: 'ca',\n  /** Chechen */\n  Ce: 'ce',\n  /** Corsican */\n  Co: 'co',\n  /** Czech */\n  Cs: 'cs',\n  /** Church Slavic */\n  Cu: 'cu',\n  /** Welsh */\n  Cy: 'cy',\n  /** Danish */\n  Da: 'da',\n  /** German */\n  De: 'de',\n  /** Austrian German */\n  DeAt: 'de_AT',\n  /** Swiss High German */\n  DeCh: 'de_CH',\n  /** Dzongkha */\n  Dz: 'dz',\n  /** Ewe */\n  Ee: 'ee',\n  /** Greek */\n  El: 'el',\n  /** English */\n  En: 'en',\n  /** Australian English */\n  EnAu: 'en_AU',\n  /** Canadian English */\n  EnCa: 'en_CA',\n  /** British English */\n  EnGb: 'en_GB',\n  /** American English */\n  EnUs: 'en_US',\n  /** Esperanto */\n  Eo: 'eo',\n  /** Spanish */\n  Es: 'es',\n  /** European Spanish */\n  EsEs: 'es_ES',\n  /** Mexican Spanish */\n  EsMx: 'es_MX',\n  /** Estonian */\n  Et: 'et',\n  /** Basque */\n  Eu: 'eu',\n  /** Persian */\n  Fa: 'fa',\n  /** Dari */\n  FaAf: 'fa_AF',\n  /** Fulah */\n  Ff: 'ff',\n  /** Finnish */\n  Fi: 'fi',\n  /** Faroese */\n  Fo: 'fo',\n  /** French */\n  Fr: 'fr',\n  /** Canadian French */\n  FrCa: 'fr_CA',\n  /** Swiss French */\n  FrCh: 'fr_CH',\n  /** Western Frisian */\n  Fy: 'fy',\n  /** Irish */\n  Ga: 'ga',\n  /** Scottish Gaelic */\n  Gd: 'gd',\n  /** Galician */\n  Gl: 'gl',\n  /** Gujarati */\n  Gu: 'gu',\n  /** Manx */\n  Gv: 'gv',\n  /** Hausa */\n  Ha: 'ha',\n  /** Hebrew */\n  He: 'he',\n  /** Hindi */\n  Hi: 'hi',\n  /** Croatian */\n  Hr: 'hr',\n  /** Haitian Creole */\n  Ht: 'ht',\n  /** Hungarian */\n  Hu: 'hu',\n  /** Armenian */\n  Hy: 'hy',\n  /** Interlingua */\n  Ia: 'ia',\n  /** Indonesian */\n  Id: 'id',\n  /** Igbo */\n  Ig: 'ig',\n  /** Sichuan Yi */\n  Ii: 'ii',\n  /** Icelandic */\n  Is: 'is',\n  /** Italian */\n  It: 'it',\n  /** Japanese */\n  Ja: 'ja',\n  /** Javanese */\n  Jv: 'jv',\n  /** Georgian */\n  Ka: 'ka',\n  /** Kikuyu */\n  Ki: 'ki',\n  /** Kazakh */\n  Kk: 'kk',\n  /** Kalaallisut */\n  Kl: 'kl',\n  /** Khmer */\n  Km: 'km',\n  /** Kannada */\n  Kn: 'kn',\n  /** Korean */\n  Ko: 'ko',\n  /** Kashmiri */\n  Ks: 'ks',\n  /** Kurdish */\n  Ku: 'ku',\n  /** Cornish */\n  Kw: 'kw',\n  /** Kyrgyz */\n  Ky: 'ky',\n  /** Latin */\n  La: 'la',\n  /** Luxembourgish */\n  Lb: 'lb',\n  /** Ganda */\n  Lg: 'lg',\n  /** Lingala */\n  Ln: 'ln',\n  /** Lao */\n  Lo: 'lo',\n  /** Lithuanian */\n  Lt: 'lt',\n  /** Luba-Katanga */\n  Lu: 'lu',\n  /** Latvian */\n  Lv: 'lv',\n  /** Malagasy */\n  Mg: 'mg',\n  /** Maori */\n  Mi: 'mi',\n  /** Macedonian */\n  Mk: 'mk',\n  /** Malayalam */\n  Ml: 'ml',\n  /** Mongolian */\n  Mn: 'mn',\n  /** Marathi */\n  Mr: 'mr',\n  /** Malay */\n  Ms: 'ms',\n  /** Maltese */\n  Mt: 'mt',\n  /** Burmese */\n  My: 'my',\n  /** Norwegian Bokmål */\n  Nb: 'nb',\n  /** North Ndebele */\n  Nd: 'nd',\n  /** Nepali */\n  Ne: 'ne',\n  /** Dutch */\n  Nl: 'nl',\n  /** Flemish */\n  NlBe: 'nl_BE',\n  /** Norwegian Nynorsk */\n  Nn: 'nn',\n  /** Nyanja */\n  Ny: 'ny',\n  /** Oromo */\n  Om: 'om',\n  /** Odia */\n  Or: 'or',\n  /** Ossetic */\n  Os: 'os',\n  /** Punjabi */\n  Pa: 'pa',\n  /** Polish */\n  Pl: 'pl',\n  /** Pashto */\n  Ps: 'ps',\n  /** Portuguese */\n  Pt: 'pt',\n  /** Brazilian Portuguese */\n  PtBr: 'pt_BR',\n  /** European Portuguese */\n  PtPt: 'pt_PT',\n  /** Quechua */\n  Qu: 'qu',\n  /** Romansh */\n  Rm: 'rm',\n  /** Rundi */\n  Rn: 'rn',\n  /** Romanian */\n  Ro: 'ro',\n  /** Moldavian */\n  RoMd: 'ro_MD',\n  /** Russian */\n  Ru: 'ru',\n  /** Kinyarwanda */\n  Rw: 'rw',\n  /** Sanskrit */\n  Sa: 'sa',\n  /** Sindhi */\n  Sd: 'sd',\n  /** Northern Sami */\n  Se: 'se',\n  /** Sango */\n  Sg: 'sg',\n  /** Sinhala */\n  Si: 'si',\n  /** Slovak */\n  Sk: 'sk',\n  /** Slovenian */\n  Sl: 'sl',\n  /** Samoan */\n  Sm: 'sm',\n  /** Shona */\n  Sn: 'sn',\n  /** Somali */\n  So: 'so',\n  /** Albanian */\n  Sq: 'sq',\n  /** Serbian */\n  Sr: 'sr',\n  /** Southern Sotho */\n  St: 'st',\n  /** Sundanese */\n  Su: 'su',\n  /** Swedish */\n  Sv: 'sv',\n  /** Swahili */\n  Sw: 'sw',\n  /** Congo Swahili */\n  SwCd: 'sw_CD',\n  /** Tamil */\n  Ta: 'ta',\n  /** Telugu */\n  Te: 'te',\n  /** Tajik */\n  Tg: 'tg',\n  /** Thai */\n  Th: 'th',\n  /** Tigrinya */\n  Ti: 'ti',\n  /** Turkmen */\n  Tk: 'tk',\n  /** Tongan */\n  To: 'to',\n  /** Turkish */\n  Tr: 'tr',\n  /** Tatar */\n  Tt: 'tt',\n  /** Uyghur */\n  Ug: 'ug',\n  /** Ukrainian */\n  Uk: 'uk',\n  /** Urdu */\n  Ur: 'ur',\n  /** Uzbek */\n  Uz: 'uz',\n  /** Vietnamese */\n  Vi: 'vi',\n  /** Volapük */\n  Vo: 'vo',\n  /** Wolof */\n  Wo: 'wo',\n  /** Xhosa */\n  Xh: 'xh',\n  /** Yiddish */\n  Yi: 'yi',\n  /** Yoruba */\n  Yo: 'yo',\n  /** Chinese */\n  Zh: 'zh',\n  /** Simplified Chinese */\n  ZhHans: 'zh_Hans',\n  /** Traditional Chinese */\n  ZhHant: 'zh_Hant',\n  /** Zulu */\n  Zu: 'zu'\n};\nconst LogicalOperator = {\n  And: 'AND',\n  Or: 'OR'\n};\nconst OrderType = {\n  Aggregate: 'Aggregate',\n  Regular: 'Regular',\n  Seller: 'Seller'\n};\n/**\n * @description\n * Permissions for administrators and customers. Used to control access to\n * GraphQL resolvers via the {@link Allow} decorator.\n *\n * ## Understanding Permission.Owner\n *\n * `Permission.Owner` is a special permission which is used in some Vendure resolvers to indicate that that resolver should only\n * be accessible to the \"owner\" of that resource.\n *\n * For example, the Shop API `activeCustomer` query resolver should only return the Customer object for the \"owner\" of that Customer, i.e.\n * based on the activeUserId of the current session. As a result, the resolver code looks like this:\n *\n * @example\n * ```TypeScript\n * \\@Query()\n * \\@Allow(Permission.Owner)\n * async activeCustomer(\\@Ctx() ctx: RequestContext): Promise<Customer | undefined> {\n *   const userId = ctx.activeUserId;\n *   if (userId) {\n *     return this.customerService.findOneByUserId(ctx, userId);\n *   }\n * }\n * ```\n *\n * Here we can see that the \"ownership\" must be enforced by custom logic inside the resolver. Since \"ownership\" cannot be defined generally\n * nor statically encoded at build-time, any resolvers using `Permission.Owner` **must** include logic to enforce that only the owner\n * of the resource has access. If not, then it is the equivalent of using `Permission.Public`.\n *\n *\n * @docsCategory common\n */\nconst Permission = {\n  /** View own affiliate widgets and pages */\n  AffiliatePermission: 'AffiliatePermission',\n  /** Allow this user to enable invoice generation */\n  AllowInvoicesPermission: 'AllowInvoicesPermission',\n  /** Authenticated means simply that the user is logged in */\n  Authenticated: 'Authenticated',\n  /** Grants permission to create Administrator */\n  CreateAdministrator: 'CreateAdministrator',\n  /** Grants permission to create Asset */\n  CreateAsset: 'CreateAsset',\n  /** Grants permission to create Products, Facets, Assets, Collections */\n  CreateCatalog: 'CreateCatalog',\n  /** Grants permission to create Channel */\n  CreateChannel: 'CreateChannel',\n  /** Grants permission to create Collection */\n  CreateCollection: 'CreateCollection',\n  /** Grants permission to create Country */\n  CreateCountry: 'CreateCountry',\n  /** Grants permission to create Customer */\n  CreateCustomer: 'CreateCustomer',\n  /** Grants permission to create CustomerGroup */\n  CreateCustomerGroup: 'CreateCustomerGroup',\n  /** Grants permission to create Facet */\n  CreateFacet: 'CreateFacet',\n  /** Grants permission to create Order */\n  CreateOrder: 'CreateOrder',\n  /** Grants permission to create PaymentMethod */\n  CreatePaymentMethod: 'CreatePaymentMethod',\n  /** Grants permission to create Product */\n  CreateProduct: 'CreateProduct',\n  /** Grants permission to create Promotion */\n  CreatePromotion: 'CreatePromotion',\n  /** Grants permission to create Seller */\n  CreateSeller: 'CreateSeller',\n  /** Grants permission to create PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  CreateSettings: 'CreateSettings',\n  /** Grants permission to create ShippingMethod */\n  CreateShippingMethod: 'CreateShippingMethod',\n  /** Grants permission to create StockLocation */\n  CreateStockLocation: 'CreateStockLocation',\n  /** Grants permission to create System */\n  CreateSystem: 'CreateSystem',\n  /** Grants permission to create Tag */\n  CreateTag: 'CreateTag',\n  /** Grants permission to create TaxCategory */\n  CreateTaxCategory: 'CreateTaxCategory',\n  /** Grants permission to create TaxRate */\n  CreateTaxRate: 'CreateTaxRate',\n  /** Grants permission to create Zone */\n  CreateZone: 'CreateZone',\n  /** Grants permission to delete Administrator */\n  DeleteAdministrator: 'DeleteAdministrator',\n  /** Grants permission to delete Asset */\n  DeleteAsset: 'DeleteAsset',\n  /** Grants permission to delete Products, Facets, Assets, Collections */\n  DeleteCatalog: 'DeleteCatalog',\n  /** Grants permission to delete Channel */\n  DeleteChannel: 'DeleteChannel',\n  /** Grants permission to delete Collection */\n  DeleteCollection: 'DeleteCollection',\n  /** Grants permission to delete Country */\n  DeleteCountry: 'DeleteCountry',\n  /** Grants permission to delete Customer */\n  DeleteCustomer: 'DeleteCustomer',\n  /** Grants permission to delete CustomerGroup */\n  DeleteCustomerGroup: 'DeleteCustomerGroup',\n  /** Grants permission to delete Facet */\n  DeleteFacet: 'DeleteFacet',\n  /** Grants permission to delete Order */\n  DeleteOrder: 'DeleteOrder',\n  /** Grants permission to delete PaymentMethod */\n  DeletePaymentMethod: 'DeletePaymentMethod',\n  /** Grants permission to delete Product */\n  DeleteProduct: 'DeleteProduct',\n  /** Grants permission to delete Promotion */\n  DeletePromotion: 'DeletePromotion',\n  /** Grants permission to delete Seller */\n  DeleteSeller: 'DeleteSeller',\n  /** Grants permission to delete PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  DeleteSettings: 'DeleteSettings',\n  /** Grants permission to delete ShippingMethod */\n  DeleteShippingMethod: 'DeleteShippingMethod',\n  /** Grants permission to delete StockLocation */\n  DeleteStockLocation: 'DeleteStockLocation',\n  /** Grants permission to delete System */\n  DeleteSystem: 'DeleteSystem',\n  /** Grants permission to delete Tag */\n  DeleteTag: 'DeleteTag',\n  /** Grants permission to delete TaxCategory */\n  DeleteTaxCategory: 'DeleteTaxCategory',\n  /** Grants permission to delete TaxRate */\n  DeleteTaxRate: 'DeleteTaxRate',\n  /** Grants permission to delete Zone */\n  DeleteZone: 'DeleteZone',\n  /** Allows administrator to export orders */\n  ExportOrders: 'ExportOrders',\n  /** Owner means the user owns this entity, e.g. a Customer's own Order */\n  Owner: 'Owner',\n  /** Public means any unauthenticated user may perform the operation */\n  Public: 'Public',\n  /** Grants permission to read Administrator */\n  ReadAdministrator: 'ReadAdministrator',\n  /** Grants permission to read Asset */\n  ReadAsset: 'ReadAsset',\n  /** Grants permission to read Products, Facets, Assets, Collections */\n  ReadCatalog: 'ReadCatalog',\n  /** Grants permission to read Channel */\n  ReadChannel: 'ReadChannel',\n  /** Grants permission to read Collection */\n  ReadCollection: 'ReadCollection',\n  /** Grants permission to read Country */\n  ReadCountry: 'ReadCountry',\n  /** Grants permission to read Customer */\n  ReadCustomer: 'ReadCustomer',\n  /** Grants permission to read CustomerGroup */\n  ReadCustomerGroup: 'ReadCustomerGroup',\n  /** Grants permission to read Facet */\n  ReadFacet: 'ReadFacet',\n  /** Grants permission to read Order */\n  ReadOrder: 'ReadOrder',\n  /** Grants permission to read PaymentMethod */\n  ReadPaymentMethod: 'ReadPaymentMethod',\n  /** Grants permission to read Product */\n  ReadProduct: 'ReadProduct',\n  /** Grants permission to read Promotion */\n  ReadPromotion: 'ReadPromotion',\n  /** Grants permission to read Seller */\n  ReadSeller: 'ReadSeller',\n  /** Grants permission to read PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  ReadSettings: 'ReadSettings',\n  /** Grants permission to read ShippingMethod */\n  ReadShippingMethod: 'ReadShippingMethod',\n  /** Grants permission to read StockLocation */\n  ReadStockLocation: 'ReadStockLocation',\n  /** Grants permission to read System */\n  ReadSystem: 'ReadSystem',\n  /** Grants permission to read Tag */\n  ReadTag: 'ReadTag',\n  /** Grants permission to read TaxCategory */\n  ReadTaxCategory: 'ReadTaxCategory',\n  /** Grants permission to read TaxRate */\n  ReadTaxRate: 'ReadTaxRate',\n  /** Grants permission to read Zone */\n  ReadZone: 'ReadZone',\n  /** SuperAdmin has unrestricted access to all operations */\n  SuperAdmin: 'SuperAdmin',\n  /** Grants permission to update Administrator */\n  UpdateAdministrator: 'UpdateAdministrator',\n  /** Grants permission to update Asset */\n  UpdateAsset: 'UpdateAsset',\n  /** Grants permission to update Products, Facets, Assets, Collections */\n  UpdateCatalog: 'UpdateCatalog',\n  /** Grants permission to update Channel */\n  UpdateChannel: 'UpdateChannel',\n  /** Grants permission to update Collection */\n  UpdateCollection: 'UpdateCollection',\n  /** Grants permission to update Country */\n  UpdateCountry: 'UpdateCountry',\n  /** Grants permission to update Customer */\n  UpdateCustomer: 'UpdateCustomer',\n  /** Grants permission to update CustomerGroup */\n  UpdateCustomerGroup: 'UpdateCustomerGroup',\n  /** Grants permission to update Facet */\n  UpdateFacet: 'UpdateFacet',\n  /** Grants permission to update GlobalSettings */\n  UpdateGlobalSettings: 'UpdateGlobalSettings',\n  /** Grants permission to update Order */\n  UpdateOrder: 'UpdateOrder',\n  /** Grants permission to update PaymentMethod */\n  UpdatePaymentMethod: 'UpdatePaymentMethod',\n  /** Grants permission to update Product */\n  UpdateProduct: 'UpdateProduct',\n  /** Grants permission to update Promotion */\n  UpdatePromotion: 'UpdatePromotion',\n  /** Grants permission to update Seller */\n  UpdateSeller: 'UpdateSeller',\n  /** Grants permission to update PaymentMethods, ShippingMethods, TaxCategories, TaxRates, Zones, Countries, System & GlobalSettings */\n  UpdateSettings: 'UpdateSettings',\n  /** Grants permission to update ShippingMethod */\n  UpdateShippingMethod: 'UpdateShippingMethod',\n  /** Grants permission to update StockLocation */\n  UpdateStockLocation: 'UpdateStockLocation',\n  /** Grants permission to update System */\n  UpdateSystem: 'UpdateSystem',\n  /** Grants permission to update Tag */\n  UpdateTag: 'UpdateTag',\n  /** Grants permission to update TaxCategory */\n  UpdateTaxCategory: 'UpdateTaxCategory',\n  /** Grants permission to update TaxRate */\n  UpdateTaxRate: 'UpdateTaxRate',\n  /** Grants permission to update Zone */\n  UpdateZone: 'UpdateZone'\n};\nconst SortOrder = {\n  Asc: 'ASC',\n  Desc: 'DESC'\n};\nconst ErrorResultFragmentDoc = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    fragment ErrorResult on ErrorResult {\n  errorCode\n  message\n  __typename\n}\n    `;\nconst AddressFragmentDoc = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    fragment Address on Address {\n  id\n  fullName\n  company\n  streetLine1\n  streetLine2\n  city\n  province\n  postalCode\n  country {\n    id\n    code\n    name\n  }\n  phoneNumber\n  customFields {\n    firstName\n    lastName\n    isResidential\n  }\n  defaultShippingAddress\n  defaultBillingAddress\n}\n    `;\nconst OrderAddressFragmentDoc = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    fragment OrderAddress on OrderAddress {\n  fullName\n  streetLine1\n  streetLine2\n  city\n  province\n  postalCode\n  countryCode\n  phoneNumber\n  customFields {\n    firstName\n    lastName\n    isResidential\n  }\n}\n    `;\nconst OrderLineFragmentDoc = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    fragment OrderLine on OrderLine {\n  id\n  quantity\n  unitPrice\n  linePrice\n  discounts {\n    type\n    description\n    amount\n  }\n  productVariant {\n    id\n    name\n    featuredAsset {\n      source\n    }\n    options {\n      name\n      group {\n        name\n      }\n    }\n    product {\n      name\n      slug\n      featuredAsset {\n        source\n      }\n    }\n  }\n}\n    `;\nconst DiscountFragmentDoc = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    fragment Discount on Discount {\n  adjustmentSource\n  amount\n  amountWithTax\n  description\n  type\n}\n    `;\nconst OrderDetailFragmentDoc = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    fragment OrderDetail on Order {\n  __typename\n  id\n  code\n  active\n  createdAt\n  state\n  currencyCode\n  totalQuantity\n  subTotal\n  subTotalWithTax\n  taxSummary {\n    description\n    taxRate\n    taxTotal\n  }\n  shipping\n  shippingWithTax\n  total\n  totalWithTax\n  customer {\n    id\n    firstName\n    lastName\n    emailAddress\n    customFields {\n      callsign\n    }\n    user {\n      id\n    }\n  }\n  shippingAddress {\n    ...OrderAddress\n  }\n  billingAddress {\n    ...OrderAddress\n  }\n  shippingLines {\n    shippingMethod {\n      id\n      code\n      name\n    }\n    priceWithTax\n  }\n  lines {\n    ...OrderLine\n  }\n  couponCodes\n  discounts {\n    ...Discount\n  }\n  customFields {\n    carrierCode\n    serviceCode\n    serviceName\n  }\n}\n    ${OrderAddressFragmentDoc}\n${OrderLineFragmentDoc}\n${DiscountFragmentDoc}`;\nconst DetailedProductFragmentDoc = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    fragment DetailedProduct on Product {\n  id\n  name\n  description\n  collections {\n    id\n    slug\n    name\n    breadcrumbs {\n      id\n      name\n      slug\n    }\n  }\n  facetValues {\n    facet {\n      id\n      code\n      name\n    }\n    id\n    code\n    name\n  }\n  featuredAsset {\n    id\n    preview\n  }\n  assets {\n    id\n    preview\n  }\n  variants {\n    id\n    name\n    priceWithTax\n    currencyCode\n    sku\n    stockLevel\n    featuredAsset {\n      id\n      preview\n    }\n  }\n}\n    `;\nconst ListedProductFragmentDoc = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    fragment ListedProduct on SearchResult {\n  productId\n  productName\n  slug\n  productAsset {\n    id\n    preview\n  }\n  currencyCode\n  priceWithTax {\n    ... on PriceRange {\n      min\n      max\n    }\n    ... on SinglePrice {\n      value\n    }\n  }\n}\n    `;\nconst ProductVariantFragmentDoc = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    fragment ProductVariant on ProductVariant {\n  id\n  sku\n  price\n  options {\n    code\n    group {\n      code\n    }\n  }\n  customFields {\n    discount_price\n  }\n  stockLevel\n}\n    `;\nconst ProductFragmentDoc = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    fragment Product on Product {\n  id\n  slug\n  updatedAt\n  variants {\n    ...ProductVariant\n  }\n}\n    ${ProductVariantFragmentDoc}`;\nconst LoginDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation login($email: String!, $password: String!, $rememberMe: Boolean) {\n  login(username: $email, password: $password, rememberMe: $rememberMe) {\n    __typename\n    ... on CurrentUser {\n      id\n      identifier\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nconst LogoutDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation logout {\n  logout {\n    success\n  }\n}\n    `;\nconst RegisterCustomerAccountDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation registerCustomerAccount($input: RegisterCustomerInput!) {\n  registerCustomerAccount(input: $input) {\n    __typename\n    ... on Success {\n      success\n    }\n    ... on PasswordValidationError {\n      errorCode\n      message\n      validationErrorMessage\n      __typename\n    }\n    ... on NativeAuthStrategyError {\n      errorCode\n      message\n      __typename\n    }\n    ... on ErrorResult {\n      __typename\n      errorCode\n      message\n    }\n  }\n}\n    `;\nconst VerifyCustomerAccountDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation verifyCustomerAccount($token: String!, $password: String) {\n  verifyCustomerAccount(token: $token, password: $password) {\n    __typename\n    ... on CurrentUser {\n      id\n      identifier\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nconst RequestUpdateCustomerEmailAddressDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation requestUpdateCustomerEmailAddress($password: String!, $newEmailAddress: String!) {\n  requestUpdateCustomerEmailAddress(\n    password: $password\n    newEmailAddress: $newEmailAddress\n  ) {\n    __typename\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nconst UpdateCustomerEmailAddressDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation updateCustomerEmailAddress($token: String!) {\n  updateCustomerEmailAddress(token: $token) {\n    __typename\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nconst ResetPasswordDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation resetPassword($token: String!, $password: String!) {\n  resetPassword(token: $token, password: $password) {\n    __typename\n    ... on CurrentUser {\n      id\n      identifier\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nconst RequestPasswordResetDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation requestPasswordReset($emailAddress: String!) {\n  requestPasswordReset(emailAddress: $emailAddress) {\n    __typename\n    ... on Success {\n      success\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nconst IsValidEmailDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query IsValidEmail($email: String!) {\n  isValidEmail(input: $email) {\n    __typename\n    ... on ValidEmail {\n      valid\n    }\n    ... on InvalidDomainError {\n      errorCode\n      message\n    }\n    ... on InvalidEmailError {\n      errorCode\n      message\n    }\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    `;\nconst AvailableCountriesDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query availableCountries {\n  availableCountries {\n    id\n    name\n    code\n  }\n}\n    `;\nconst EligibleShippingMethodsDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query eligibleShippingMethods {\n  eligibleShippingMethods {\n    id\n    code\n    name\n    description\n    metadata\n    price\n    priceWithTax\n  }\n}\n    `;\nconst AuthorizeNetKeysDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query authorizeNetKeys {\n  authorizeNetKeys {\n    clientKey\n    loginId\n  }\n}\n    `;\nconst AddPaymentToOrderDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation addPaymentToOrder($input: PaymentInput!) {\n  addPaymentToOrder(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst EligiblePaymentMethodsDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query eligiblePaymentMethods {\n  eligiblePaymentMethods {\n    id\n    code\n    name\n    description\n    eligibilityMessage\n    isEligible\n  }\n}\n    `;\nconst OrderShippingRatesDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query orderShippingRates {\n  orderAllAvailableRates {\n    name\n    code\n    nickname\n    shippingProviderId\n    shippingProviderId\n    primary\n    services {\n      serviceName\n      serviceCode\n      shipmentCost\n      otherCost\n    }\n  }\n}\n    `;\nconst CollectionsDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query collections {\n  collections {\n    items {\n      id\n      name\n      slug\n      parent {\n        name\n      }\n      featuredAsset {\n        id\n        preview\n      }\n    }\n  }\n}\n    `;\nconst CollectionDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query collection($slug: String, $id: ID) {\n  collection(slug: $slug, id: $id) {\n    id\n    name\n    slug\n    breadcrumbs {\n      id\n      name\n      slug\n    }\n    children {\n      id\n      name\n      slug\n      featuredAsset {\n        id\n        preview\n      }\n    }\n  }\n}\n    `;\nconst ActiveCustomerAddressesDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query activeCustomerAddresses {\n  activeCustomer {\n    id\n    addresses {\n      ...Address\n    }\n  }\n}\n    ${AddressFragmentDoc}`;\nconst CreateCustomerAddressDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation createCustomerAddress($input: CreateAddressInput!) {\n  createCustomerAddress(input: $input) {\n    ...Address\n  }\n}\n    ${AddressFragmentDoc}`;\nconst ActiveCustomerOrdersDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query activeCustomerOrders($options: OrderListOptions) {\n  activeCustomer {\n    id\n    orders(options: $options) {\n      items {\n        id\n        code\n        state\n        totalWithTax\n        orderPlacedAt\n      }\n      totalItems\n    }\n  }\n}\n    `;\nconst UpdateCustomerPasswordMutationDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation updateCustomerPasswordMutation($currentPassword: String!, $newPassword: String!) {\n  updateCustomerPassword(\n    currentPassword: $currentPassword\n    newPassword: $newPassword\n  ) {\n    ... on Success {\n      success\n    }\n    ...ErrorResult\n  }\n}\n    ${ErrorResultFragmentDoc}`;\nconst DeleteCustomerAddressDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation deleteCustomerAddress($id: ID!) {\n  deleteCustomerAddress(id: $id) {\n    success\n  }\n}\n    `;\nconst UpdateCustomerAddressMutationDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation updateCustomerAddressMutation($input: UpdateAddressInput!) {\n  updateCustomerAddress(input: $input) {\n    ...Address\n  }\n}\n    ${AddressFragmentDoc}`;\nconst CreateCustomerAddressMutationDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation createCustomerAddressMutation($input: CreateAddressInput!) {\n  createCustomerAddress(input: $input) {\n    ...Address\n  }\n}\n    ${AddressFragmentDoc}`;\nconst CurrentCustomerDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query CurrentCustomer {\n  activeCustomer {\n    __typename\n    id\n    firstName\n    lastName\n    emailAddress\n    customFields {\n      callsign\n    }\n    addresses {\n      ...Address\n    }\n  }\n}\n    ${AddressFragmentDoc}`;\nconst UpdateCustomerDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation UpdateCustomer($input: UpdateCustomerInput!) {\n  updateCustomer(input: $input) {\n    __typename\n    id\n    firstName\n    lastName\n    emailAddress\n    customFields {\n      callsign\n    }\n  }\n}\n    `;\nconst SetOrderShippingAddressDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation setOrderShippingAddress($input: CreateAddressInput!) {\n  setOrderShippingAddress(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst SetOrderBillingAddressDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation setOrderBillingAddress($input: CreateAddressInput!) {\n  setOrderBillingAddress(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst SetCustomerForOrderDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation setCustomerForOrder($input: CreateCustomerInput!) {\n  setCustomerForOrder(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      __typename\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst AddItemToOrderDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation addItemToOrder($productVariantId: ID!, $quantity: Int!) {\n  addItemToOrder(productVariantId: $productVariantId, quantity: $quantity) {\n    __typename\n    ...OrderDetail\n    ... on InsufficientStockError {\n      __typename\n      order {\n        ...OrderDetail\n      }\n    }\n    ... on ErrorResult {\n      __typename\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst SetOrderShippingMethodDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation setOrderShippingMethod($shippingMethodId: [ID!]!) {\n  setOrderShippingMethod(shippingMethodId: $shippingMethodId) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst AdjustOrderLineDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation adjustOrderLine($orderLineId: ID!, $quantity: Int!) {\n  adjustOrderLine(orderLineId: $orderLineId, quantity: $quantity) {\n    __typename\n    ...OrderDetail\n    ... on InsufficientStockError {\n      order {\n        id\n        code\n        state\n        subTotal\n        lines {\n          ...OrderLine\n        }\n      }\n    }\n    ... on ErrorResult {\n      __typename\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}\n${OrderLineFragmentDoc}`;\nconst RemoveOrderLineDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation removeOrderLine($orderLineId: ID!) {\n  removeOrderLine(orderLineId: $orderLineId) {\n    __typename\n    ...OrderDetail\n    ... on ErrorResult {\n      __typename\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst ActiveOrderFullDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query activeOrderFull {\n  activeOrder {\n    ...OrderDetail\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst OrderByCodeDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query orderByCode($code: String!) {\n  orderByCode(code: $code) {\n    ...OrderDetail\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst OrderTrackingInfoDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query orderTrackingInfo($orderCode: String!) {\n  orderTrackingInfo(orderCode: $orderCode) {\n    __typename\n    state\n    orderPlaced\n    trackingCodes\n  }\n}\n    `;\nconst ApplyCouponCodeDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation ApplyCouponCode($code: String!) {\n  applyCouponCode(couponCode: $code) {\n    __typename\n    ...OrderDetail\n    ... on ErrorResult {\n      __typename\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst RemoveCouponCodeDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation RemoveCouponCode($code: String!) {\n  removeCouponCode(couponCode: $code) {\n    __typename\n    ...OrderDetail\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst SetOrderCustomFieldDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation SetOrderCustomField($input: UpdateOrderInput!) {\n  setOrderCustomFields(input: $input) {\n    ...OrderDetail\n    ... on ErrorResult {\n      errorCode\n      message\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst TransitionOrderToStateDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation TransitionOrderToState($state: String!) {\n  transitionOrderToState(state: $state) {\n    ...OrderDetail\n    ... on OrderStateTransitionError {\n      errorCode\n      message\n      transitionError\n      fromState\n      toState\n    }\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst ActiveOrderDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query activeOrder {\n  activeOrder {\n    ...OrderDetail\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst SetTaxCloudAuthorizationDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation SetTaxCloudAuthorization {\n  setTaxCloudAuthorization {\n    ...OrderDetail\n  }\n}\n    ${OrderDetailFragmentDoc}`;\nconst CreateGuestOrderCustomerUserDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    mutation createGuestOrderCustomerUser($orderCode: String!) {\n  createGuestOrderCustomerUser(orderCode: $orderCode) {\n    __typename\n    id\n    emailAddress\n  }\n}\n    `;\nconst ProductDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query product($slug: String, $id: ID) {\n  product(slug: $slug, id: $id) {\n    ...DetailedProduct\n  }\n}\n    ${DetailedProductFragmentDoc}`;\nconst SearchDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query search($input: SearchInput!) {\n  search(input: $input) {\n    totalItems\n    items {\n      ...ListedProduct\n    }\n    facetValues {\n      count\n      facetValue {\n        id\n        name\n        facet {\n          id\n          name\n        }\n      }\n    }\n  }\n}\n    ${ListedProductFragmentDoc}`;\nconst ProductSummaryDocument = (0,graphql_tag__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n    query ProductSummary($slug: StringOperators) {\n  products(options: {filter: {slug: $slug}}) {\n    items {\n      ...Product\n    }\n    totalItems\n  }\n}\n    ${ProductFragmentDoc}`;\nfunction getSdk(requester) {\n  return {\n    login(variables, options) {\n      return requester(LoginDocument, variables, options);\n    },\n    logout(variables, options) {\n      return requester(LogoutDocument, variables, options);\n    },\n    registerCustomerAccount(variables, options) {\n      return requester(RegisterCustomerAccountDocument, variables, options);\n    },\n    verifyCustomerAccount(variables, options) {\n      return requester(VerifyCustomerAccountDocument, variables, options);\n    },\n    requestUpdateCustomerEmailAddress(variables, options) {\n      return requester(RequestUpdateCustomerEmailAddressDocument, variables, options);\n    },\n    updateCustomerEmailAddress(variables, options) {\n      return requester(UpdateCustomerEmailAddressDocument, variables, options);\n    },\n    resetPassword(variables, options) {\n      return requester(ResetPasswordDocument, variables, options);\n    },\n    requestPasswordReset(variables, options) {\n      return requester(RequestPasswordResetDocument, variables, options);\n    },\n    IsValidEmail(variables, options) {\n      return requester(IsValidEmailDocument, variables, options);\n    },\n    availableCountries(variables, options) {\n      return requester(AvailableCountriesDocument, variables, options);\n    },\n    eligibleShippingMethods(variables, options) {\n      return requester(EligibleShippingMethodsDocument, variables, options);\n    },\n    authorizeNetKeys(variables, options) {\n      return requester(AuthorizeNetKeysDocument, variables, options);\n    },\n    addPaymentToOrder(variables, options) {\n      return requester(AddPaymentToOrderDocument, variables, options);\n    },\n    eligiblePaymentMethods(variables, options) {\n      return requester(EligiblePaymentMethodsDocument, variables, options);\n    },\n    orderShippingRates(variables, options) {\n      return requester(OrderShippingRatesDocument, variables, options);\n    },\n    collections(variables, options) {\n      return requester(CollectionsDocument, variables, options);\n    },\n    collection(variables, options) {\n      return requester(CollectionDocument, variables, options);\n    },\n    activeCustomerAddresses(variables, options) {\n      return requester(ActiveCustomerAddressesDocument, variables, options);\n    },\n    createCustomerAddress(variables, options) {\n      return requester(CreateCustomerAddressDocument, variables, options);\n    },\n    activeCustomerOrders(variables, options) {\n      return requester(ActiveCustomerOrdersDocument, variables, options);\n    },\n    updateCustomerPasswordMutation(variables, options) {\n      return requester(UpdateCustomerPasswordMutationDocument, variables, options);\n    },\n    deleteCustomerAddress(variables, options) {\n      return requester(DeleteCustomerAddressDocument, variables, options);\n    },\n    updateCustomerAddressMutation(variables, options) {\n      return requester(UpdateCustomerAddressMutationDocument, variables, options);\n    },\n    createCustomerAddressMutation(variables, options) {\n      return requester(CreateCustomerAddressMutationDocument, variables, options);\n    },\n    CurrentCustomer(variables, options) {\n      return requester(CurrentCustomerDocument, variables, options);\n    },\n    UpdateCustomer(variables, options) {\n      return requester(UpdateCustomerDocument, variables, options);\n    },\n    setOrderShippingAddress(variables, options) {\n      return requester(SetOrderShippingAddressDocument, variables, options);\n    },\n    setOrderBillingAddress(variables, options) {\n      return requester(SetOrderBillingAddressDocument, variables, options);\n    },\n    setCustomerForOrder(variables, options) {\n      return requester(SetCustomerForOrderDocument, variables, options);\n    },\n    addItemToOrder(variables, options) {\n      return requester(AddItemToOrderDocument, variables, options);\n    },\n    setOrderShippingMethod(variables, options) {\n      return requester(SetOrderShippingMethodDocument, variables, options);\n    },\n    adjustOrderLine(variables, options) {\n      return requester(AdjustOrderLineDocument, variables, options);\n    },\n    removeOrderLine(variables, options) {\n      return requester(RemoveOrderLineDocument, variables, options);\n    },\n    activeOrderFull(variables, options) {\n      return requester(ActiveOrderFullDocument, variables, options);\n    },\n    orderByCode(variables, options) {\n      return requester(OrderByCodeDocument, variables, options);\n    },\n    orderTrackingInfo(variables, options) {\n      return requester(OrderTrackingInfoDocument, variables, options);\n    },\n    ApplyCouponCode(variables, options) {\n      return requester(ApplyCouponCodeDocument, variables, options);\n    },\n    RemoveCouponCode(variables, options) {\n      return requester(RemoveCouponCodeDocument, variables, options);\n    },\n    SetOrderCustomField(variables, options) {\n      return requester(SetOrderCustomFieldDocument, variables, options);\n    },\n    TransitionOrderToState(variables, options) {\n      return requester(TransitionOrderToStateDocument, variables, options);\n    },\n    activeOrder(variables, options) {\n      return requester(ActiveOrderDocument, variables, options);\n    },\n    SetTaxCloudAuthorization(variables, options) {\n      return requester(SetTaxCloudAuthorizationDocument, variables, options);\n    },\n    createGuestOrderCustomerUser(variables, options) {\n      return requester(CreateGuestOrderCustomerUserDocument, variables, options);\n    },\n    product(variables, options) {\n      return requester(ProductDocument, variables, options);\n    },\n    search(variables, options) {\n      return requester(SearchDocument, variables, options);\n    },\n    ProductSummary(variables, options) {\n      return requester(ProductSummaryDocument, variables, options);\n    }\n  };\n}\n\n//# sourceURL=webpack:///./src/graphql/generated-shop.ts?");

/***/ }),

/***/ "./src/graphql/shopClient.ts":
/*!***********************************!*\
  !*** ./src/graphql/shopClient.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AUTH_TOKEN: () => (/* binding */ AUTH_TOKEN),\n/* harmony export */   HEADER_AUTH_TOKEN_KEY: () => (/* binding */ HEADER_AUTH_TOKEN_KEY),\n/* harmony export */   requester: () => (/* binding */ requester),\n/* harmony export */   shopSdk: () => (/* binding */ shopSdk)\n/* harmony export */ });\n/* harmony import */ var graphql_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql/index */ \"../node_modules/graphql/index.js\");\n/* harmony import */ var _generated_shop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated-shop */ \"./src/graphql/generated-shop.ts\");\n/* harmony import */ var _lib_cookieHelpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/cookieHelpers */ \"./src/lib/cookieHelpers.ts\");\n\n\n\n// import { AUTH_TOKEN, DEV_API, HEADER_AUTH_TOKEN_KEY, PROD_API } from '../graphql-types';\nconst AUTH_TOKEN = 'authToken';\nconst HEADER_AUTH_TOKEN_KEY = 'vendure-auth-token';\nconst baseUrl = window.backend_url;\nconst shopApi = `${baseUrl}/shop-api`;\nconst requester = async (doc, vars, options = {\n  token: '',\n  apiUrl: shopApi,\n  channelToken: ''\n}) => {\n  options.apiUrl = options?.apiUrl ?? shopApi;\n  return execute({\n    query: (0,graphql_index__WEBPACK_IMPORTED_MODULE_1__.print)(doc),\n    variables: vars\n  }, options);\n};\nconst execute = async (body, options) => {\n  const requestOptions = {\n    method: 'POST',\n    headers: createHeaders(),\n    body: JSON.stringify(body)\n  };\n  if (options.token) {\n    requestOptions.headers = {\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${options.token ?? ''}`\n    };\n  }\n  if (options.channelToken) {\n    requestOptions.headers['vendure-token'] = options.channelToken;\n  }\n  const response = await executeRequest(requestOptions, options.apiUrl);\n  // DELETE THIS\n  // const response: ResponseProps<R> = await executeRequest(requestOptions, options.apiUrl!);\n  if (response.token) {\n    (0,_lib_cookieHelpers__WEBPACK_IMPORTED_MODULE_2__.setCookie)(AUTH_TOKEN, response.token, 365);\n    // setCookie(ADMIN_AUTH_TOKEN, response.token, 365);\n  }\n  return response.data;\n};\nconst createHeaders = () => {\n  const token = (0,_lib_cookieHelpers__WEBPACK_IMPORTED_MODULE_2__.getCookie)(AUTH_TOKEN);\n  let headers = {\n    'Content-Type': 'application/json',\n    ...(token && {\n      Authorization: `Bearer ${token}`\n    })\n  };\n  return headers;\n};\nconst executeRequest = async (options, apiUrl) => {\n  let httpResponse = new Response();\n  try {\n    httpResponse = await fetch(apiUrl, options);\n  } catch (error) {\n    console.error(`Could not fetch from ${apiUrl}. Reason: ${error}`);\n  }\n  return await extractTokenAndData(httpResponse, apiUrl);\n};\nconst extractTokenAndData = async (response, apiUrl) => {\n  if (response.body === null) {\n    console.error(`Emtpy request body for a call to ${apiUrl}`);\n    return {\n      token: '',\n      data: {}\n    };\n  }\n  const token = response.headers.get(HEADER_AUTH_TOKEN_KEY) || '';\n  const {\n    data,\n    errors\n  } = await response.json();\n  if (errors && !data) {\n    // e.g. API access related errors, like auth issues.\n    throw new Error(errors[0].message);\n  }\n  return {\n    token,\n    data\n  };\n};\nconst shopSdk = (0,_generated_shop__WEBPACK_IMPORTED_MODULE_0__.getSdk)(requester);\n\n//# sourceURL=webpack:///./src/graphql/shopClient.ts?");

/***/ }),

/***/ "./src/lib/cookieHelpers.ts":
/*!**********************************!*\
  !*** ./src/lib/cookieHelpers.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCookie: () => (/* binding */ getCookie),\n/* harmony export */   setCookie: () => (/* binding */ setCookie)\n/* harmony export */ });\nconst SECURE_COOKIE = false;\nconst setCookie = (name, value, days) => {\n  let expires = '';\n  if (days) {\n    const date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = '; expires=' + date.toUTCString();\n  }\n  const secureCookie = SECURE_COOKIE ? ' Secure; SameSite=Strict;' : '';\n  document.cookie = name + '=' + (value || '') + expires + `;${secureCookie} path=/`;\n};\nconst getCookie = name => {\n  const keyValues = document.cookie.split(';');\n  let result = '';\n  keyValues.forEach(item => {\n    const [key, value] = item.split('=');\n    if (key.trim() === name) {\n      result = value;\n    }\n  });\n  return result;\n};\n\n//# sourceURL=webpack:///./src/lib/cookieHelpers.ts?");

/***/ })

}]);